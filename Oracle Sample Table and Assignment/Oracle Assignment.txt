Select Clause with Where clause 

1) Display details of jobs where the minimum salary is greater than 10000.

2) Display the first name and join date of the employees who joined between 2002 and 2005.

3) Display first name and join date of the employees who is either IT Programmer or Sales Man.

4) Display first name, salary, commission pct, and hire date for employees with salary less than 10000.

5) Display job Title, the difference between minimum and maximum salaries for jobs with max salary in the range 10000 to 20000.

6) Display employees where the first name or last name starts with S.

7) Display details of jobs in the descending order of the title.

8) Display employees who joined in the month of May.

9) Display details of the employees where commission percentage is null and salary in the range 5000 to 10000 and department is 30.


Oracle Functions 


Display employees who joined in the month of May.

Display first name, salary, and round the salary to thousands.

Display first name and date of first salary of the employees.

Display first name and experience of the employees.

Display first name of employees who joined in 2001.

Display first name and last name after converting the first letter of each name to upper case and the rest to lower case.

Display the first word in job title.

Display the length of first name for employees where last name contain character ‘b’ after 3rd position.

Display first name in upper case and email address in lower case for employees where the first name and email address are same irrespective of the case.

Display employees who joined in the current year.

Display the number of days between system date and 1st January 2011.

Display how many employees joined in each month of the current year.

Display manager ID and number of employees managed by the manager.

Oracle Aggregate function 

Display employee ID and the date on which he ended his previous job.

Display employee ID and the date on which he ended his previous job.

Display number of employees joined after 15th of the month.





select with Group by 

Display the country ID and number of cities we have in the country.

Display average salary of employees in each department who have commission percentage.


Display job ID, number of employees, sum of salary, and difference between highest salary and lowest salary of the employees of the job.


Display job ID for jobs with average salary more than 10000.

Display job title and average salary of employees

Display years in which more than 10 employees joined.

Display departments in which more than five employees have commission percentage.

Display department name and number of employees in the department.

Display employee ID for employees who did more than one job in the past.

Display department ID, year, and Number of employees joined.

Display departments where any manager is managing more than 5 employees.

DML Operation 

Change salary of employee 115 to 8000 if the existing salary is less than 6000.

Insert a new employee into employees with all the required details.

Delete department 20.

Change job ID of employee 110 to IT_PROG if the employee belongs to department 10 and the existing job ID does not start with IT.

Insert a row into departments table with manager ID 120 and location ID in any location ID for city Tokyo.

Display job title, employee ID, number of days between ending date and starting date for all jobs in department 30 from job history.

Join 

Display job title, employee ID, number of days between ending date and starting date for all jobs in department 30 from job history.


Display department name and manager first name.

Display department name, manager name, and city.


Display country name, city, and department name.

Display job title, department name, employee last name, starting date for all jobs from 2000 to 2005.


Display job title, employee name, and the difference between maximum salary for the job and salary of the employee.

Display details of jobs that were done by any employee who is currently drawing more than 15000 of salary.

Display department name, manager name, and salary of the manager for all managers whose experience is more than 5 years.

Display employee name if the employee joined before his manager.

Display employee name, job title for the jobs employee did in the past where the job was done less than six months.

Display employee name and country in which he is working.

Display department name, average salary and number of employees with commission within the department.
 

Display the month in which more than 5 employees joined in any department located in Sydney.

Display details of departments in which the maximum salary is more than 10000.

Sub Query 

Display details of departments managed by ‘Smith’.

Display jobs into which employees joined in the current year.

Display employees who did not do any job in the past.


Display job title and average salary for employees who did a job in the past.


Display country name, city, and number of departments where department has more than 5 employees.


Display details of manager who manages more than 5 employees.

Display employee name, job title, start date, and end date of past jobs of all employees with commission percentage null.

Display the departments into which no employee joined in last two years.

Display the details of departments in which the max salary is greater than 10000 for employees who did a job in the past.

Display details of current job for employees who worked as IT Programmers in the past.

Display the details of employees drawing the highest salary in the department.

Display the city of employee whose employee ID is 105.

Display third highest salary of all employees


		DDL Assignments  
Table ---> Customer 
	custId, firstName,lastName,age,city, mobileNumber, dob
			Insert minimum 5 records 
Table ----> Branch 
	branchId, branchName, city 
			Insert minimum 3 records 
Table -----> Account 
	accountNumber, openingBalance, typeOfAccount, status 
			Insert minimum 5 records 
	Add the column BankId and CustId column using Alter command. 
Table ----> Transaction 
	transactionId, transactionDate, MediumOfTransaction, TransactionAmount 
			Insert minium 2 records 
			Drop the column MediumOfTransaction 
			rename column as transcationDate to tranDate and TransactionAmount to tranAmt	Table ----> Loan 
	LoanId, loanAmount 
			Insert minimum 2 records 		
	Add the column customerId and bankId using alter command. 
		
DML Operation 


Change salary of employee 115 to 8000 if the existing salary is less than 6000.

Insert a new employee info into employees with all the required details.

Delete department 270.

Change job ID of employee 110 to IT_PROG if the employee belongs to department 10 and the existing job ID does not start with IT.

Insert a row into departments table with manager ID 120 and location ID in any location ID for city Tokyo.


		DDL Assignments  with Constraints 
		
Table ---> Customer 
	custId, firstName,lastName,age,city, mobileNumber, dob
		Add the Constraints 
		custId is Primary Key 
		firstName not null
		age must be greater than 21
		mobile must be unique  
Table ----> Branch 
	branchId, branchName, city 
		Add the Constraints 
		branchId is Primary Key 
		branchName not null
		city not null	
Table -----> Account 
	accountNumber, openingBalance, typeOfAccount, status,BankId,CustId
		Add the Constraints 
		accountNumber is primary key 
		openingBalance must be greater than 5000
		typeOfAccount must be saving/current
		BankId is foreign key refer to BranchId(Primary key) Branch table 
		CustId is foreign key refer to Customer(Primary key) Customer table 	
Table ----> Transaction 
	transactionId, transactionDate, MediumOfTransaction, TransactionAmount 
		Add the Constraints 
		transactionId is primary key 		
Table ----> Loan 
	LoanId, loanAmount, customerId and bankdId 
		Add the Constraints 
		loadId is primary key 
		loanAmount must be +ve 
		BankId is foreign key refer to BranchId(Primary key) Branch table 
	 

PL/SQL Programs

Write a program to interchange the salaries of employee 120 and 122.

Increase the salary of employee 115 based on the following conditions: If experience is more than 10 years, increase salary by 20% If experience is greater than 5 years, increase salary by 10% Otherwise 5% Case by Expression:

Change commission percentage as follows for employee with ID = 150. If salary is more than 10000 then commission is 0.4%, if Salary is less than 10000 but experience is more than 10 years then 0.35%, if salary is less than 3000 then commission is 0.25%. In the remaining cases commission is 0.15%.

Find out the name of the employee and name of the department for the employee who is managing for employee 103.


Display missing employee IDs.

Display the year in which maximum number of employees joined along with how many joined in each month in that year.
declare

Change salary of employee 130 to the salary of the employee with first name ‘Joe’. If Joe is not found then take average salary of all employees. If more than one employee with first name ‘Joe’ is found then take the least salary of the employees with first name Joe.



In Pl SQL display employee full_name,salary and job_id using any type of loop in PL SQL. 

Display Employee_name,Department_name and City in PL SQL for all Employee using any loop (hint join or without join also). 

From employee table store 10 employee_name, hire_date, salary. if exp is more than 30 year provide the bonus as 5000 for each employee else 
3000 bonus for remaining employee using varray.


From employee table store all employee_name, hire_date, salary. if exp is more than 30 year provide the bonus as 5000 for each employee else 
3000 bonus for remaining employee using table.


Retrive all employee first_name, department_name and city using records with %type attribute. hint you can use join or without join in 
PLSQL block. 

Retrieve First_name,Salary,Department_name of only those employee working in department id is 100 and 50 
using cursor with records concept with rowtype% and loop but not fixed size ie for loop(ie don't use 1 to 51).  

Write a procedure if we pass employee id we have to display department name and city in  anonymous block. (Hint in and out parameter).

Write a procedure if we pass department_id as a parameter we have to return with out parameter as name of the manger of that deparment. 


create a two function if we pass employee_id return departmentName and employee_id return city. so when we run the query using employee 
table like 
select employee_id,first_name,getDepartement(employee_id),getCity(employee_id) from employees;

create a funtion that takes manager_id and return the name of the employee who report to this manager. The name must be returtn 
as a string comm separted. 

 








 



