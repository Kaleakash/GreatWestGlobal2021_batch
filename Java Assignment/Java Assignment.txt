1. Take employee id,name,salary. Salary consider as a basic salary. find hra (10% on salary),
da (5% on salary) and pf (7% on salary). find Gross Salary and display id,name,grossSalary. 

2. online examination : you have to visit every block mandatory as well as it must visit only one time. 
	do {
		1: GK
		2: Maths 
		3 : English 
		4 : Exit 
			please chose the option 
			
		switch(){
		case 1:	GK block 
			break
		case 2 :	Maths block	 
			break
		case 3 :	English block 
			break
		default :	wrong block 
			break;
		}
			do you want to continue (Yes or no)
	}while() 

	3 question in each block 
	4+5 
	
	english total + maths total + gk total = total 

	GT	>70 pass else fail 


3. you have to declare four array variable id,name,salary, desg base upon the desg we have to provide the bonus for employee 
if desg is manger 5000, 
if desg is programmer 3000
else 1500
you have to take the help of scanner class to create the array memory and values. 

4. Create two classes Employee and EmployeeTest 
Employee class must be contains three instance variable ie id,name,salary
it must be contains three non static method ie read(), calSalary() and display() 
create Scanner class objet inside Employee to receive the value through keyword. 
EmployeeTest class contaisn main method 
create the object of Employee class call read method to receive the id, name and salary through keyboards. 
inside calSalary() method declare three local varible hra, da and pf. hra must be 10% on salary, da must be 5% on salary and pf is 
7% on salary. calculate grosssalary(but don't declare instance variable as grosssSalary variable). 
then we call display method it must be display id,name,salary(ie gross salary values). 

5. using method overloading find the area of triangle, circle and rectangle ie method name must be area. 

6.
Create five classes Employee,Manager,Developer, Address and EmployeeTest 
Employee class must be contains three instance variable ie id,name,salary
it must be contains three non static method ie read(), calSalary() and display() 
create Scanner class objet inside Employee to receive the value through keyword. 
We have to create the Address class object inside Employee class(ie has a relationship (aggregation).
create Manager and Developer class and that class must be extends Employee class. 
inside manager we have to create extra variable ie numberOfEmp and two methods readMgr and disMgr to receive numberOfEmp
and display numberOfEmp; we have to call readAdd() method of address class to recive city, state and pincode. 
insider Developer we have to create extra variable ie projectName and two methods readDev and disDeve to receive 
projectName and dispay ProjectName; we have to call readAdd() method of address class to recive city, state and pincode. 
Now we have to create the Address class which contains city, state and picode instance variable and two methods 
ie readAdd() and disAdd(). Inside a address class we have to create the Scanner object. 

EmployeeTest class contains main method 
create the object of Programmer and Manager  class call read method to receive the id, name and salary through keyboards. 
inside calSalary() method declare three local varible hra, da and pf. hra must be 10% on salary, da must be 5% on salary and pf is 
7% on salary. calculate grosssalary(but don't declare instance variable as grosssSalary variable). 
then we call display method it must be display id,name,salary(ie gross salary values). 

Output : 

Manager Information 
Id 		:100
Name		: Raj Deep 
Salary 		: 45500
NumberOfemp 	: 10
City		: Bangalore 
State		:Kar 
Pincode 		:560096


Developer Information 
Id 		:101
Name		: Ravi  
Salary 		: 30000
NumberOfemp 	: Java
City		: Bangalore 
State		:Kar 
Pincode 		:560001

7. 	Mini Project 

	Abc Bank Application 

	Menu Driven Application 

	1. Create Account 
		a. 1100, 1101, 1102 account number, name = unknown and default amount 500.
			default constructor 
		b. take name and amount must > 500.
			parameterized constructor 	
	2. Check Balance 
			ask the account number if account number is present display amount 
			else display invalid account number 
	3. Withdraw amount 
			ask the accont number and amount maintain min 500. 
			don't allow to withdraw more than 10,000 at time. 
	4. Deposite 
			ask the account number and amount if person enter more than 50,000
			ask pan card. 
	5. Transfer 	ask sender account number 
			ask receiver account number 
			check balance 
			can't transfer more than 25,000 at one time. 
	

	service package 
	abstract class AccountInitialization {
			static int accountCount =0;
			Account accounts[]=new Accont[10];
				acc number start with 1100 
							
			AccountInitialization() {
					accno increment by 1 
					name = "Unknown"
					amount = 500;
			Account ac = new Account(accno,name,amount);
			accounts[accountCount];
			accounts++;
			}
			AccountInitialization(String name, float amount){
					accno number increment by 1 
					name 
					amount 
					amount > 500 
			Account ac = new Account(accno,name,amount);
			accounts[accountCount];
			accounts++;
			}
			abstract void transfer(fromAcc,ToAcc,amount); 
	}

	interface Bank {
		void withdraw(accno,amount);		
		void deposit(accno,amount); 
		void checkBalanc(accno);
	}	

	class MyBank extends AccountInitialization implements Bank {
		must be provide the body for 
		transfer 
		withdraw
		deposit
		checkBalance 
	}

	then create bean pacakge 

	create Account JavaBean 
		with property accno,name and amount 
		constructor 
		setter and getter methods 

	then create main class in main package with contains main method 

	do {
		1. Create Account 
			a.
			b. 
		2. Check Balance 
		3. Withdraw 
		4. Desposit
		5. Transfer 
		switch() {
				
				

		}

	}while()


8. 

	main pacakge. 
	App 
		main ----> Entry of the application 
		Input Device : Keywords. 	
	contains main method take the value through keyboards, set the value to JavaBean class if require and 
	create the Service class object and pass the value to service layer and display the result on console base upon the 
	operation. 
	
	bean class : Employee class(package name must be bean and class name must be Employee) 	
	id,name,salary (variable contains one world it must be lower case, more than one one world 
	second world onward first letter upper case ie camel naming rules). 
	empId,empName,empSalary;
	constructor (empty or parameter) 
	setter and getter methods. 
	toString() 
	No System.out.println in JavaBean class. 
	
		CRUD Operation (Create, Read, Update and Delete) 
	
	service package :
		EmployeeService : interface which contains all method declaration. specification 
		EmployeeServiceImp : This provide the body for the EmployeeService interface. implementation  
	
	EmployeeService Servier Layer :
			pure business logic.  
	List<Employee> empList = new ArrayList<>();
	Set
	Map 
		1. Add Employee Details : pass java bean class object do logic and return value.
				id must be unique 
				salary > 25000 and <50000
		2. Delete Employee 		take id as parameter delete record and return confirmation
				using Id 
		3. Update Employee Salary : pass object as parameter and update the salary and return confirmation
				using Id you have update the salary.
				salary must be increment.  
		4. retrieve all employee details. : retrieve all employee details return List<Employee>
		
		5. Display particular employee salary using id.: take id as parameter and return salary if id present or 
				display no record present. 

9. 
		bean : Account 		accnum,name,amount 

		service : AccountService 
					createAccount	
							accno number must be unique 
							amount must > 500  
					withdraw 		
							we can withdraw at time 10,000	
					deposit
							we can deposit max 49,900 
		
					checkBalance 
							get balance 
		main : App    		

				main method 
					do while

11.	With JDBC 

	main pacakge. 
	App 
		main ----> Entry of the application 
		Input Device : Keywords. 	
	contains main method take the value through keyboards, set the value to JavaBean class if require and 
	create the Service class object and pass the value to service layer and display the result on console base upon the 
	operation. 
	
	bean class : Employee class(package name must be bean and class name must be Employee) 	
	id,name,salary (variable contains one world it must be lower case, more than one one world 
	second world onward first letter upper case ie camel naming rules). 
	empId,empName,empSalary;
	constructor (empty or parameter) 
	setter and getter methods. 
	toString() 
	No System.out.println in JavaBean class. 
	
		CRUD Operation (Create, Read, Update and Delete) 
	
	service package :
		EmployeeService : interface which contains all method declaration. specification 
		EmployeeServiceImp : This provide the body for the EmployeeService interface. implementation  
	
	EmployeeService Servier Layer :
			pure business logic.  
	List<Employee> empList = new ArrayList<>();
	Set
	Map 
		1. Add Employee Details : pass java bean class object do logic and return value.
				id must be unique 
				salary > 25000 and <50000
		2. Delete Employee 		take id as parameter delete record and return confirmation
				using Id 
		3. Update Employee Salary : pass object as parameter and update the salary and return confirmation
				using Id you have update the salary.
				salary must be increment.  
		4. retrieve all employee details. : retrieve all employee details return List<Employee>
		
		5. Display particular employee salary using id.: take id as parameter and return salary if id present or 
				display no record present. 

 



12. 	with JDBC 	

	bean : Account 		accnum,name,amount 

		service : AccountService 
					createAccount	
							accno number must be unique 
							amount must > 500  
					withdraw 		
							we can withdraw at time 10,000	
					deposit
							we can deposit max 49,900 
		
					checkBalance 
							get balance 
		main : App    		

				main method 
					do while

you have to test for bean, service test , dao test 

13 . Employee Management System 
		bean 
		service 
		dao 
		resource 
		test 
			no main method 

14. Account Management System 

		bean 
		service 
		dao 
		resource 
		test 
			no main method 

								jdbc or orm 	java class or properties file 
	view 		controller			service 		dao 		resource 			database 
	
	React/ Angular  	spring boot Rest API 
 	


 